---
import Layout from '../../layouts/Layout.astro';
import ShareButtons from '../../components/ShareButtons.astro';
import TableOfContents from '../../components/TableOfContents.astro';

export function getStaticPaths() {
  return [
    {
      params: { slug: "future-of-web-development-2024" },
      props: {
        title: "The Future of Web Development: What's Next in 2024",
        date: "2023-12-15",
        content: `As we approach 2024, the web development landscape continues to evolve at an unprecedented pace. In this post, we'll explore the key trends and technologies that are shaping the future of web development.

## 1. Web Components and Micro-Frontends

The adoption of web components and micro-frontend architecture is growing rapidly. This approach allows teams to build more maintainable and scalable applications by breaking them down into smaller, independent pieces.

## 2. AI-Powered Development Tools

Artificial Intelligence is revolutionizing how we write and debug code. From intelligent code completion to automated testing, AI tools are becoming an integral part of the development workflow.

## 3. WebAssembly and Edge Computing

WebAssembly continues to gain traction, enabling high-performance applications in the browser. Combined with edge computing, this creates new possibilities for distributed applications.

## Looking Ahead

The future of web development is exciting, with new tools and technologies emerging regularly. Staying updated with these trends will be crucial for developers in 2024 and beyond.`
      }
    },
    {
      params: { slug: "designing-for-accessibility" },
      props: {
        title: "Designing for Accessibility: A Comprehensive Guide",
        date: "2023-12-10",
        content: `Creating accessible websites is not just about complianceâ€”it's about ensuring that everyone can use your product effectively. Let's explore key principles and practices.

## Understanding Accessibility

Accessibility in web design means creating websites that can be used by people with various disabilities, including visual, auditory, motor, and cognitive impairments.

## Key Principles

1. Provide text alternatives for non-text content
2. Create content that can be presented in different ways
3. Make all functionality available from a keyboard
4. Help users navigate and find content

## Tools and Testing

Regular testing with accessibility tools and real users is crucial for maintaining high accessibility standards.`
      }
    },
    {
      params: { slug: "mastering-modern-css" },
      props: {
        title: "Mastering Modern CSS Techniques",
        date: "2023-12-05",
        content: `Modern CSS has evolved significantly, offering powerful features for creating sophisticated layouts and interactions. Let's explore some advanced techniques.

## CSS Grid and Flexbox

Understanding the power of modern layout systems and when to use each one.

## CSS Custom Properties

Leveraging variables for maintainable and dynamic styling.

## Modern Selectors

Using advanced selectors for precise styling control.`
      }
    },
    {
      params: { slug: "ai-in-design-tools" },
      props: {
        title: "The Rise of AI in Design Tools",
        date: "2023-12-01",
        content: `Artificial Intelligence is transforming the way we approach design. Let's explore how AI is enhancing our design workflows.

## AI-Powered Design Assistance

How AI is helping designers make better decisions and work more efficiently.

## Automated Design Systems

The role of AI in creating and maintaining design systems.

## Future Implications

What the rise of AI means for designers and the industry as a whole.`
      }
    }
  ];
}

const { title, date, content } = Astro.props;
---

<Layout title={title}>
  <article class="container max-w-5xl mx-auto px-4 pt-32">
    <div class="lg:grid lg:grid-cols-[1fr_250px] gap-12">
      <div class="max-w-2xl">
        <h1 class="text-4xl font-bold mb-4">{title}</h1>
        <p class="text-gray-500 mb-8">
          {new Date(date).toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric',
          })}
        </p>
        <ShareButtons title={title} />
        <div class="prose prose-lg max-w-none mt-12">
          {content}
        </div>
      </div>
      <aside class="hidden lg:block space-y-8 sticky top-24">
        <TableOfContents content={content} />
        <ShareButtons title={title} vertical />
      </aside>
    </div>
  </article>
</Layout>